<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
          http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
          http://www.springframework.org/schema/tx
          http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
          http://www.springframework.org/schema/context
          http://www.springframework.org/schema/context/spring-context-3.0.xsd
          http://www.springframework.org/schema/aop
          http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

    <!-- 加载配置文件 -->
    <context:property-placeholder location="classpath:jdbc.properties"  ignore-unresolvable="true"/>

    <!--  配置数据源-->
   <!-- <bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close">
        <property name="driverClass" value="${driver}"></property>
        <property name="jdbcUrl" value="${url}"></property>
        <property name="username" value="${username}"></property>
        <property name="password" value="${password}"></property>
        <property name="idleConnectionTestPeriod" value="${boneCP.idleConnectionTestPeriod}" />
        <property name="idleMaxAge" value="${boneCP.idleMaxAge}" />
        <property name="maxConnectionsPerPartition" value="${boneCP.maxConnectionsPerPartition}" />
        <property name="minConnectionsPerPartition" value="${boneCP.minConnectionsPerPartition}" />
        <property name="partitionCount" value="${boneCP.partitionCount}" />
        <property name="acquireIncrement" value="${boneCP.acquireIncrement}" />
        <property name="statementsCacheSize" value="${boneCP.statementsCacheSize}" />
        <property name="releaseHelperThreads" value="${boneCP.releaseHelperThreads}" />
    </bean>-->

    <!-- 阿里巴巴druid数据连接池 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <property name="url" value="${url}" />
        <property name="username" value="${username}" />
        <property name="password" value="${password}" />
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="1" />
        <property name="minIdle" value="1" />
        <property name="maxActive" value="20" />
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000" />
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000" />
        <property name="validationQuery" value="SELECT 'x'" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="false" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="stat" />
    </bean>

    <!-- 采用注释的方式 -->
    <context:annotation-config/>

    <!-- 自动扫描 -->
    <context:component-scan base-package="com.rhino.*"/>

    <!--  事务-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!-- 采用注释的方式管理事务 -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

    <!--  配置SqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <property name="configLocation" value="classpath:mybatis.xml"></property>
        <property name="mapperLocations" value="classpath:/other-mapper/*.xml"/>
    </bean>

    <!-- 配置javamelody监控 -->
    <bean id= "facadeMonitoringAdvisor" class="net.bull.javamelody.MonitoringSpringAdvisor" >
        <property name ="pointcut" >
            <bean class="org.springframework.aop.support.JdkRegexpMethodPointcut" >
                <property name ="pattern" value="com.rhino.*" /><!--正则表达式-->
            </bean>
        </property>
    </bean>

    <bean id="lemonBSupport" class="com.rhino.bjl.mybatis.db.LemonDBSupport" />
    <import resource="spring-redis.xml" />

</beans>